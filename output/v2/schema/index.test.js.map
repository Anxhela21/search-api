{"version":3,"sources":["../../../src/v2/schema/index.test.js"],"names":["describe","test","MockServer","typeDefs","result","query","expect","errors","not","toBeDefined","data","__schema","types","toBeInstanceOf","Array"],"mappings":";;AASA;;AACA;;2cAVA;;;;;;;;;AAYAA,SAAS,QAAT,EAAmB,MAAM;AACvBC,OAAK,4BAAL,oBAAmC,aAAY;AAC7C,UAAMC,aAAa,8BAAWC,eAAX,CAAnB;AACA,UAAMC,SAAS,MAAMF,WAAWG,KAAX,CAAiB,iCAAjB,CAArB;AACAC,WAAOF,OAAOG,MAAd,EAAsBC,GAAtB,CAA0BC,WAA1B;AACA;AACAH,WAAOF,OAAOM,IAAP,CAAYC,QAAZ,CAAqBC,KAA5B,EAAmCC,cAAnC,CAAkDC,KAAlD;AACD,GAND;AAOD,CARD","file":"index.test.js","sourcesContent":["/** *****************************************************************************\n * Licensed Materials - Property of IBM\n * (c) Copyright IBM Corporation 2019. All Rights Reserved.\n *\n * Note to U.S. Government Users Restricted Rights:\n * Use, duplication or disclosure restricted by GSA ADP Schedule\n * Contract with IBM Corp.\n ****************************************************************************** */\n\nimport { mockServer } from 'graphql-tools';\nimport { typeDefs } from './index';\n\ndescribe('Schema', () => {\n  test('has valid type definitions', async () => {\n    const MockServer = mockServer(typeDefs);\n    const result = await MockServer.query('{ __schema { types { name } } }');\n    expect(result.errors).not.toBeDefined();\n    // eslint-disable-next-line no-underscore-dangle\n    expect(result.data.__schema.types).toBeInstanceOf(Array);\n  });\n});\n\n"]}