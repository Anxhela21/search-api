{"version":3,"sources":["../../../src/v2/connectors/kube.test.js"],"names":["asyncReturn","value","waitTime","Promise","res","setTimeout","describe","test","mockHttp","jest","fn","body","connector","KubeConnector","kubeApiEndpoint","httpLib","get","expect","mock","calls","toHaveLength","toMatchSnapshot","token","headers","post"],"mappings":"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","file":"kube.test.js","sourcesContent":["/** *****************************************************************************\n * Licensed Materials - Property of IBM\n * (c) Copyright IBM Corporation 2018. All Rights Reserved.\n *\n * Note to U.S. Government Users Restricted Rights:\n * Use, duplication or disclosure restricted by GSA ADP Schedule\n * Contract with IBM Corp.\n ****************************************************************************** */\n\nimport KubeConnector from './kube';\n\nconst asyncReturn = (value, waitTime = 500) =>\n  new Promise(res => setTimeout(res, waitTime, value));\n\ndescribe('KubeConnector', () => {\n  describe('Get', () => {\n    test('calls default connector', async () => {\n      const mockHttp = jest.fn(() => asyncReturn({ body: { test: 'value' } }, 200));\n\n      const connector = new KubeConnector({\n        kubeApiEndpoint: 'https://testURL/kubernetes',\n        httpLib: mockHttp,\n      });\n\n      await connector.get('/api/test');\n\n      expect(mockHttp.mock.calls).toHaveLength(1);\n      expect(mockHttp.mock.calls[0]).toMatchSnapshot();\n    });\n\n    test('calls httpLib with correct arguments', async () => {\n      const mockHttp = jest.fn(() => asyncReturn({ body: { test: 'value' } }, 200));\n\n      const connector = new KubeConnector({\n        kubeApiEndpoint: 'https://testURL/kubernetes',\n        token: 'localdev',\n        httpLib: mockHttp,\n      });\n\n      await connector.get('/api/test');\n\n      expect(mockHttp.mock.calls).toHaveLength(1);\n      expect(mockHttp.mock.calls[0]).toMatchSnapshot();\n    });\n\n    test('correctly merges additional arguments', async () => {\n      const mockHttp = jest.fn(() =>\n        new Promise(res =>\n          setTimeout(res, 200, { body: { test: 'value' } })));\n\n      const connector = new KubeConnector({\n        kubeApiEndpoint: 'https://testURL/kubernetes',\n        token: 'localdev',\n        httpLib: mockHttp,\n      });\n\n      await connector.get('/api/test', { headers: { 'x-custom-header': 'test-value' } });\n\n      expect(mockHttp.mock.calls[0]).toHaveLength(1);\n      expect(mockHttp.mock.calls[0]).toMatchSnapshot();\n    });\n  });\n\n  describe('Post', () => {\n    test('calls httpLib with correct arguments', async () => {\n      const mockHttp = jest.fn(() => asyncReturn({ body: { test: 'value' } }, 200));\n\n      const connector = new KubeConnector({\n        kubeApiEndpoint: 'https://testURL/kubernetes',\n        token: 'localdev',\n        httpLib: mockHttp,\n      });\n\n      await connector.post('/api/test', { body: 'test-value' });\n\n      expect(mockHttp.mock.calls[0]).toHaveLength(1);\n      expect(mockHttp.mock.calls[0]).toMatchSnapshot();\n    });\n  });\n});\n"]}