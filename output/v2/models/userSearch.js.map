{"version":3,"sources":["../../../src/v2/models/userSearch.js"],"names":["QueryModel","constructor","kubeConnector","userPreferenceApi","config","get","getUserPreferences","args","req","user","response","name","status","reason","code","message","Error","error","getSearches","_","saveSearch","resource","json","updatedSearches","queries","target","find","query","id","description","Date","now","toString","searchText","op","path","value","patch","apiVersion","kind","metadata","spec","savedSearches","post","statusCode","deleteSearch","url","removeIdx","findIndex","object"],"mappings":"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","file":"userSearch.js","sourcesContent":["/** *****************************************************************************\n * Licensed Materials - Property of IBM\n * (c) Copyright IBM Corporation 2018, 2019. All Rights Reserved.\n *\n * Note to U.S. Government Users Restricted Rights:\n * Use, duplication or disclosure restricted by GSA ADP Schedule\n * Contract with IBM Corp.\n ****************************************************************************** */\n\nimport _ from 'lodash';\nimport config from '../../../config';\nimport { isRequired } from '../lib/utils';\n\nexport default class QueryModel {\n  constructor({ kubeConnector = isRequired('kubeConnector') }) {\n    this.kubeConnector = kubeConnector;\n    this.userPreferenceApi = config.get('userPreferenceApi') || 'console.acm.io/v1beta1/userpreferences/';\n  }\n\n  async getUserPreferences(args) {\n    const { req: { user } } = args;\n    const response = await this.kubeConnector.get(`/apis/${this.userPreferenceApi}${user.name}`);\n    if (response.status === 'Failure' && response.reason === 'NotFound') {\n      return {};\n    } else if (response.code || response.message) {\n      throw new Error(`ERROR ${response.error.code} - ${response.error.message}`);\n    }\n    return response;\n  }\n\n  async getSearches(args) {\n    const response = await this.getUserPreferences(args);\n    return _.get(response, 'spec.savedSearches', []);\n  }\n\n  async saveSearch(args) {\n    const { req: { user }, resource } = args;\n    const response = await this.getUserPreferences(args);\n    let json = {};\n    let updatedSearches = null;\n    const queries = _.get(response, 'spec.savedSearches', []);\n    // check Id and Name for backwards compatibility\n    const target = queries.find(query => query.id === resource.id) ||\n      queries.find(query => query.name === resource.name);\n    if (target) { // this is an edit\n      target.name = resource.name;\n      target.description = resource.description;\n      target.id = resource.id || Date.now().toString(); // Queries before 3.2.1, didn't have IDs.\n      if (resource.searchText !== '') {\n        target.searchText = resource.searchText;\n      }\n      json = [\n        {\n          op: 'replace',\n          path: '/spec/savedSearches',\n          value: queries,\n        },\n      ];\n      updatedSearches = await this.kubeConnector.patch(`/apis/${this.userPreferenceApi}${user.name}`, json);\n    } else if (_.get(response, 'metadata.resourceVersion', '') !== '') { // Adding new savedSearch\n      json = [\n        {\n          op: 'add',\n          path: '/spec/savedSearches/-',\n          value: resource,\n        },\n      ];\n      updatedSearches = await this.kubeConnector.patch(`/apis/${this.userPreferenceApi}${user.name}`, json);\n    } else { // Create the userpreference CR and add savedSearch\n      json = {\n        apiVersion: 'acm.openshift.io/v1',\n        kind: 'UserPreference',\n        metadata: {\n          name: user.name,\n        },\n        spec: {\n          savedSearches: [...queries, resource],\n        },\n      };\n      updatedSearches = await this.kubeConnector.post(`/apis/${this.userPreferenceApi}${user.name}`, json);\n    }\n    if (updatedSearches.error &&\n      (updatedSearches.error.code || updatedSearches.error.statusCode || updatedSearches.error.message)) {\n      // eslint-disable-next-line max-len\n      throw new Error(`ERROR ${updatedSearches.error.code || updatedSearches.error.statusCode} - ${updatedSearches.error.message}`);\n    }\n    return updatedSearches;\n  }\n\n  async deleteSearch(args) {\n    const { req: { user }, resource } = args;\n    const url = `/apis/${this.userPreferenceApi}${user.name}`;\n    const response = await this.getUserPreferences(args);\n    const queries = _.get(response, 'spec.savedSearches', []);\n    const removeIdx = queries.findIndex(object => object.name === resource.name);\n    const json = [\n      {\n        op: 'remove',\n        path: `/spec/savedSearches/${removeIdx}`,\n      },\n    ];\n    const updatedSearches = await this.kubeConnector.patch(url, json);\n\n    if (updatedSearches.error &&\n      (updatedSearches.error.code || updatedSearches.error.statusCode || updatedSearches.error.message)) {\n      // eslint-disable-next-line max-len\n      throw new Error(`ERROR ${updatedSearches.error.code || updatedSearches.error.statusCode} - ${updatedSearches.error.message}`);\n    }\n    return updatedSearches;\n  }\n}\n"]}