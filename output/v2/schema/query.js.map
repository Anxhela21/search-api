{"version":3,"sources":["../../../src/v2/schema/query.js"],"names":["typeDef","resolver"],"mappings":";;;;;AAAA;;;;;;;;;AASO,MAAMA,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAjB;;AAkCA,MAAMC,8BAAW,EAAjB","file":"query.js","sourcesContent":["/** *****************************************************************************\n * Licensed Materials - Property of IBM\n * (c) Copyright IBM Corporation 2019. All Rights Reserved.\n *\n * Note to U.S. Government Users Restricted Rights:\n * Use, duplication or disclosure restricted by GSA ADP Schedule\n * Contract with IBM Corp.\n ****************************************************************************** */\n\nexport const typeDef = `\n# Search API - Queries\ntype Query {\n  # Special query to search for applications and their related resources efficiently.\n  # Optionally, pass name and namespace to filter the results.\n  applications(name:String namespace: String): [Application]\n\n  # Aggregated data from all applications.\n  globalAppData: GlobalAppData\n\n  # Search for resources.\n  search(input: [SearchInput]): [SearchResult]\n\n  # Get all values for the given property.\n  # If a query is passed, then results will be filtered to only those matching the query.\n  searchComplete(property: String!, query: SearchInput, limit: Int): [String]\n\n  # Get all Properties available for search.\n  searchSchema: JSON\n\n  # Get saved search queries for the current user.\n  savedSearches: [userSearch]\n}\n\n# Search API - Mutations\ntype Mutation {\n  # Delete search query for the current user.\n  deleteSearch(resource: JSON): JSON\n\n  # Save a search query for the current user.\n  saveSearch(resource: JSON): JSON\n}\n`;\n\nexport const resolver = {};\n"]}