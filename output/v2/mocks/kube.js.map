{"version":3,"sources":["../../../src/v2/mocks/kube.js"],"names":["MockKubeConnector","get","url","kind","apiVersion","groupVersion","resources","name","singularName","namespaced","verbs","includes","shortNames","metadata","selfLink","items","namespace","uid","resourceVersion","creationTimestamp","rules","apiGroups","annotations","subjects","roleRef","apiGroup","labels","spec","finalizers","status","phase","post","groups","versions","version","preferredVersion","resourceAttributes","verb","resource","allowed","reason","scopes","attributeRestrictions"],"mappings":"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","file":"kube.js","sourcesContent":["/** *****************************************************************************\n * Licensed Materials - Property of IBM\n * (c) Copyright IBM Corporation 2020. All Rights Reserved.\n *\n * Note to U.S. Government Users Restricted Rights:\n * Use, duplication or disclosure restricted by GSA ADP Schedule\n * Contract with IBM Corp.\n ****************************************************************************** */\n\n/**\n * NOTE: For brevity the response objects for user access infomation have been GREATLY reduced.\n */\n\n/* eslint-disable class-methods-use-this */\nexport default class MockKubeConnector {\n  async get(url) {\n    if (url === '/apis/authorization.openshift.io/v1') {\n      // Get request for Openshift check\n      return {\n        kind: 'APIResourceList',\n        apiVersion: 'v1',\n        groupVersion: 'authorization.openshift.io/v1',\n        resources: [\n          {\n            name: 'selfsubjectrulesreviews',\n            singularName: '',\n            namespaced: true,\n            kind: 'SelfSubjectRulesReview',\n            verbs: [\n              'create',\n            ],\n          },\n        ],\n      };\n    } else if (url.includes('/api/v1')) {\n      // Get request for non-namespaced resources without a group\n      return {\n        kind: 'APIResourceList',\n        groupVersion: 'v1',\n        resources: [\n          {\n            name: 'namespaces',\n            singularName: '',\n            namespaced: false,\n            kind: 'Namespace',\n            verbs: [\n              'create',\n              'delete',\n              'get',\n              'list',\n              'patch',\n              'update',\n              'watch',\n            ],\n            shortNames: [\n              'ns',\n            ],\n          },\n        ],\n      };\n    } else if (url.includes('v1/roles')) {\n      return {\n        kind: 'RoleList',\n        apiVersion: 'rbac.authorization.k8s.io/v1',\n        metadata: {\n          selfLink: '/apis/rbac.authorization.k8s.io/v1/roles',\n        },\n        items: [{\n          metadata: {\n            name: 'prometheus-k8s',\n            namespace: 'default',\n            selfLink:\n             '/apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/prometheus-k8s',\n            uid: '10c4e691-4af3-11ea-b9dd-00000a102771',\n            resourceVersion: '10954',\n            creationTimestamp: '2020-02-09T04:17:20Z',\n          },\n          rules: [{\n            verbs: ['get', 'list', 'watch'],\n            apiGroups: [''],\n            resources: ['services', 'endpoints', 'pods'],\n          }],\n        }],\n      };\n    } else if (url.includes('v1/clusterroles')) {\n      return {\n        kind: 'RoleBindingList',\n        apiVersion: 'rbac.authorization.k8s.io/v1',\n        metadata: {\n          selfLink: '/apis/rbac.authorization.k8s.io/v1/rolebindings',\n        },\n        items: [{\n          metadata: {\n            name: 'system:deployers',\n            namespace: 'cert-manager',\n            selfLink:\n             '/apis/rbac.authorization.k8s.io/v1/namespaces/cert-manager/rolebindings/system%3Adeployers',\n            uid: 'c532cf60-4b03-11ea-9c46-00000a10276e',\n            resourceVersion: '59172',\n            creationTimestamp: '2020-02-09T06:16:55Z',\n            annotations: {\n              'openshift.io/description':\n                'Allows deploymentconfigs in this namespace to rollout pods in this namespace...',\n            },\n          },\n          subjects: [{\n            kind: 'ServiceAccount',\n            name: 'deployer',\n            namespace: 'cert-manager',\n          }],\n          roleRef: {\n            apiGroup: 'rbac.authorization.k8s.io',\n            kind: 'ClusterRole',\n            name: 'system:deployer',\n          },\n        }],\n      };\n    } else if (url.includes('v1/rolebindings')) {\n      return {\n        kind: 'ClusterRoleList',\n        apiVersion: 'rbac.authorization.k8s.io/v1',\n        metadata: {\n          selfLink: '/apis/rbac.authorization.k8s.io/v1/clusterroles',\n        },\n        items: [{\n          metadata: {\n            name: 'admin',\n            selfLink: '/apis/rbac.authorization.k8s.io/v1/clusterroles/admin',\n            uid: 'ee11bac6-4af1-11ea-969d-00000a10275c',\n            resourceVersion: '78126',\n            creationTimestamp: '2020-02-09T04:09:12Z',\n            labels: { 'kubernetes.io/bootstrapping': 'rbac-defaults' },\n            annotations: { 'rbac.authorization.kubernetes.io/autoupdate': 'true' },\n          },\n          rules: [{\n            verbs: ['create', 'update', 'patch', 'delete'],\n            apiGroups: ['operators.coreos.com'],\n            resources: ['subscriptions'],\n          }],\n        }],\n      };\n    } else if (url.includes('v1/clusterrolebindings')) {\n      return {\n        kind: 'ClusterRoleBindingList',\n        apiVersion: 'rbac.authorization.k8s.io/v1',\n        metadata: {\n          selfLink: '/apis/rbac.authorization.k8s.io/v1/clusterrolebindings',\n        },\n        items: [{\n          metadata: {\n            name: 'admin-users',\n            selfLink:\n             '/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/admin-users',\n            uid: 'b1ecadaa-4b03-11ea-92a9-00000a1027bc',\n            resourceVersion: '58885',\n            creationTimestamp: '2020-02-09T06:16:23Z',\n            annotations: {\n              'kubectl.kubernetes.io/last-applied-configuration':\n                // eslint-disable-next-line\n                '{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"admin-users\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"cluster-admin\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"default\",\"namespace\":\"kube-system\"},{\"kind\":\"ServiceAccount\",\"name\":\"default\",\"namespace\":\"icp-system\"}]}\\n'\n            },\n          },\n          subjects: [\n            {\n              kind: 'ServiceAccount',\n              name: 'default',\n              namespace: 'kube-system',\n            },\n            {\n              kind: 'ServiceAccount',\n              name: 'default',\n              namespace: 'icp-system',\n            },\n          ],\n          roleRef: {\n            apiGroup: 'rbac.authorization.k8s.io',\n            kind: 'ClusterRole',\n            name: 'cluster-admin',\n          },\n        }],\n      };\n    } else if (url.includes('project.openshift.io/v1/projects')) {\n      return {\n        kind: 'ProjectList',\n        apiVersion: 'project.openshift.io/v1',\n        metadata: { selfLink: '/apis/project.openshift.io/v1/projects' },\n        items: [{\n          metadata: {\n            name: 'default',\n            selfLink: '/apis/project.openshift.io/v1/projects/default',\n            uid: 'ef8d61de-4af1-11ea-969d-00000a10275c',\n            resourceVersion: '69436',\n            creationTimestamp: '2020-02-09T04:09:15Z',\n            annotations: {\n              'mcm.ibm.com/accountID': 'id-mycluster-account',\n              'mcm.ibm.com/type': 'System',\n              'openshift.io/sa.scc.mcs': 's0:c16,c0',\n              'openshift.io/sa.scc.supplemental-groups': '1000240000/10000',\n              'openshift.io/sa.scc.uid-range': '1000240000/10000',\n            },\n          },\n          spec: { finalizers: ['kubernetes'] },\n          status: { phase: 'Active' },\n        }],\n      };\n    }\n    // return null if request has not been mocked.\n    return null;\n  }\n  async post(url /* , body */) {\n    if (url === '/apis') {\n      return {\n        kind: 'APIGroupList',\n        apiVersion: 'v1',\n        groups: [\n          {\n            name: 'authorization.openshift.io',\n            versions: [\n              {\n                groupVersion: 'authorization.openshift.io/v1',\n                version: 'v1',\n              },\n            ],\n            preferredVersion: {\n              groupVersion: 'authorization.openshift.io/v1',\n              version: 'v1',\n            },\n          },\n        ],\n      };\n    } else if (url.includes('selfsubjectaccessreviews')) {\n      return {\n        kind: 'SelfSubjectAccessReview',\n        apiVersion: 'authorization.k8s.io/v1',\n        metadata: {\n          creationTimestamp: null,\n        },\n        spec: {\n          resourceAttributes: {\n            verb: 'get',\n            resource: 'selfsubjectrulesreviews',\n          },\n        },\n        status: {\n          allowed: true,\n          reason: 'RBAC: allowed by ClusterRoleBinding \"oidc-admin-binding\" of ClusterRole \"cluster-admin\" to User \"admin\"',\n        },\n      };\n    } else if (url.includes('default/selfsubjectrulesreviews')) {\n      return {\n        kind: 'SelfSubjectRulesReview',\n        apiVersion: 'authorization.openshift.io/v1',\n        spec: {\n          scopes: null,\n        },\n        status: {\n          rules: [\n            {\n              verbs: [\n                '*',\n              ],\n              attributeRestrictions: null,\n              apiGroups: [\n                '*',\n              ],\n              resources: [\n                '*',\n              ],\n            },\n            {\n              verbs: [\n                'create',\n              ],\n              attributeRestrictions: null,\n              apiGroups: [\n                'authorization.openshift.io',\n              ],\n              resources: [\n                'selfsubjectrulesreviews',\n              ],\n            },\n            {\n              verbs: [\n                'get',\n                'list',\n              ],\n              attributeRestrictions: null,\n              apiGroups: [\n                'authorization.openshift.io',\n              ],\n              resources: [\n                'clusterroles',\n              ],\n            },\n          ],\n        },\n      };\n    }\n    // return null if request has not been mocked.\n    return null;\n  }\n}\n"]}